import {
  ACURIS_KYC_ACTIVITIES,
  CASE_ACTIVITIES,
  LIVENESS_CONFIDENCE_SETTING,
  CREATE_CASE,
  CREATE_USER,
  DELETE_USER,
  DJ_KYC_APPROVE,
  DJ_KYC_ARCHIVE,
  DJ_KYC_ASSIGN,
  DJ_KYC_CHANGE_FILTER_LEVEL,
  DJ_KYC_CHANGE_OM_SETTING,
  // DJ_KYC_IMPORT,
  DJ_KYC_CHANGE_RISK_SCORE,
  DJ_KYC_CREATE,
  DJ_KYC_EDIT_RISK_SCORE_NOTE,
  DJ_KYC_ESCALATE,
  DJ_KYC_GROUP_LIST_ADD_SCREENING,
  DJ_KYC_GROUP_LIST_CREATE,
  DJ_KYC_GROUP_LIST_DELETE,
  DJ_KYC_GROUP_LIST_REMOVE_SCREENING,
  DJ_KYC_GROUP_LIST_RENAME,
  /**
   * DJ
   */
  // DJ_KYC_ACTIVITIES,
  DJ_KYC_INDIVIDUAL_MATCH,
  DJ_KYC_MONITOR_CHANGE,
  DJ_KYC_REJECT,
  DJ_KYC_RE_SCREENED,
  DJ_KYC_RE_SCREENING_SETTING,
  DJ_KYC_UNARCHIVE,
  DOW_JONES_KYC_ACTIVITIES,
  KYB_ACTIVITIES,
  KYB_APPROVE,
  KYB_ASSIGN,
  KYB_BUSINESS_INFORMATION_UPDATE,
  KYB_CHANGE_FILTER_LEVEL,
  KYB_CREATE,
  KYB_ESCALATE,
  KYB_IMPORT,
  KYB_MATCH,
  KYB_MONITOR_CHANGE,
  KYB_REJECT,
  KYB_RE_SCREENED,
  KYB_RE_SCREENING_SETTING,
  KYB_RISK_ASSESSMENT,
  KYB_RISK_ASSESSMENT_UPDATE,
  KYC_APPROVE,
  KYC_ARCHIVE,
  KYC_ASSIGN,
  KYC_BLACKLIST_ACTIVATE,
  /**
   * Blacklist
   */
  KYC_BLACKLIST_CREATE,
  KYC_BLACKLIST_MATCHED,
  KYC_BLACKLIST_REMOVE,
  KYC_BLACKLIST_RE_SCREENED,
  KYC_BLACKLIST_UPDATE,
  KYC_CHANGE_FILTER_LEVEL,
  KYC_CHANGE_OM_SETTING,
  KYC_CHANGE_RISK_SCORE,
  KYC_CREATE,
  KYC_EDIT_RISK_SCORE_NOTE,
  KYC_ESCALATE,
  KYC_GROUP_LIST_ADD_SCREENING,
  KYC_GROUP_LIST_CREATE,
  KYC_GROUP_LIST_DELETE,
  KYC_GROUP_LIST_REMOVE_SCREENING,
  KYC_GROUP_LIST_RENAME,
  KYC_IMPORT,
  KYC_INDIVIDUAL_MATCH,
  KYC_MONITOR_CHANGE,
  KYC_REJECT,
  KYC_RE_SCREENED,
  KYC_RE_SCREENING_SETTING,
  KYC_UNARCHIVE,
  KYT_ACTIVITIES,
  KYT_APPROVE,
  KYT_ASSIGN,
  KYT_CHANGE_RISK_SCORE,
  KYT_CHECK_SCORE,
  KYT_CREATE,
  KYT_EDIT_RISK_SCORE_NOTE,
  KYT_ESCALATE,
  KYT_FETCH,
  KYT_IMPORT,
  KYT_ON_GOING_MONITORING_CHANGE,
  KYT_REJECT,
  KYT_RE_SCREENED_NEW_TRANSACTION,
  KYT_RE_SCREENED_SCORE_CHANGE,
  LIVENESS_ACTIVITIES,
  /**
   * Liveness
   */
  LIVENESS_APPROVE,
  LIVENESS_REJECT,
  LOGIN,
  // group
  LOGIN_LOGOUT,
  LOGOUT,
  REASSIGN,
  SETTING_WHITELIST_COUNTRY_MODIFIED,
  SETTING_WHITELIST_COUNTRY_TURNED_ON,
  SETTING_WHITELIST_IP_MODIFIED,
  SETTING_WHITELIST_IP_TURNED_ON,
  SETTING_WHITELIST_TURNED_OFF,
  STAFF_ACTIVITIES,
  WHITELIST,
} from "constants/ActionTypes";
import { find, indexOf, map, reduceRight } from "lodash";
export const getFilterActionText = (key) => {
  if (key) {
    return `audit.filter.${key}`;
  }
  return "";
};
export const getFilterActionTypeText = (key) => {
  if (key) {
    return `audit.filterType.${key}`;
  }
  return "";
};
export const getFilterGroupsActionText = (key) => {
  if (key) {
    return `audit.groups.${key}`;
  }
  return "";
};
export const filterGroupActionList = [
  {
    key: LOGIN_LOGOUT,
    labelGroup: getFilterGroupsActionText(LOGIN_LOGOUT),
    data: [LOGIN, LOGOUT],
  },
  {
    key: ACURIS_KYC_ACTIVITIES,
    labelGroup: getFilterGroupsActionText(ACURIS_KYC_ACTIVITIES),
    data: [
      KYC_CREATE,
      KYC_IMPORT,
      KYC_INDIVIDUAL_MATCH,
      KYC_CHANGE_RISK_SCORE,
      KYC_CHANGE_FILTER_LEVEL,
      KYC_EDIT_RISK_SCORE_NOTE,
      KYC_ASSIGN,
      KYC_ESCALATE,
      KYC_APPROVE,
      KYC_REJECT,
      KYC_RE_SCREENED,
      KYC_RE_SCREENING_SETTING,
      KYC_MONITOR_CHANGE,
      KYC_CHANGE_OM_SETTING,
      KYC_GROUP_LIST_CREATE,
      KYC_GROUP_LIST_RENAME,
      KYC_GROUP_LIST_DELETE,
      KYC_GROUP_LIST_ADD_SCREENING,
      KYC_GROUP_LIST_REMOVE_SCREENING,
      KYC_ARCHIVE,
      KYC_UNARCHIVE,
      KYC_BLACKLIST_CREATE,
      KYC_BLACKLIST_UPDATE,
      KYC_BLACKLIST_REMOVE,
      KYC_BLACKLIST_ACTIVATE,
      KYC_BLACKLIST_RE_SCREENED,
      KYC_BLACKLIST_MATCHED,
    ],
  },
  {
    key: DOW_JONES_KYC_ACTIVITIES,
    labelGroup: getFilterGroupsActionText(DOW_JONES_KYC_ACTIVITIES),
    data: [
      DJ_KYC_CREATE,
      DJ_KYC_CHANGE_FILTER_LEVEL,
      DJ_KYC_INDIVIDUAL_MATCH,
      DJ_KYC_CHANGE_RISK_SCORE,
      DJ_KYC_EDIT_RISK_SCORE_NOTE,
      DJ_KYC_ASSIGN,
      DJ_KYC_ESCALATE,
      DJ_KYC_APPROVE,
      DJ_KYC_REJECT,
      DJ_KYC_RE_SCREENED,
      DJ_KYC_RE_SCREENING_SETTING,
      DJ_KYC_MONITOR_CHANGE,
      DJ_KYC_CHANGE_OM_SETTING,
      DJ_KYC_GROUP_LIST_CREATE,
      DJ_KYC_GROUP_LIST_RENAME,
      DJ_KYC_GROUP_LIST_DELETE,
      DJ_KYC_GROUP_LIST_ADD_SCREENING,
      DJ_KYC_GROUP_LIST_REMOVE_SCREENING,
      DJ_KYC_ARCHIVE,
      DJ_KYC_UNARCHIVE,
    ],
  },
  {
    key: KYB_ACTIVITIES,
    labelGroup: getFilterGroupsActionText(KYB_ACTIVITIES),
    data: [
      KYB_RISK_ASSESSMENT,
      KYB_CHANGE_FILTER_LEVEL,
      KYB_CREATE,
      KYB_RISK_ASSESSMENT_UPDATE,
      KYB_RE_SCREENED,
      KYB_RE_SCREENING_SETTING,
      KYB_IMPORT,
      KYB_ASSIGN,
      KYB_APPROVE,
      KYB_REJECT,
      KYB_ESCALATE,
      KYB_MATCH,
      KYB_BUSINESS_INFORMATION_UPDATE,
      KYB_MONITOR_CHANGE,
    ],
  },
  {
    key: KYT_ACTIVITIES,
    labelGroup: getFilterGroupsActionText(KYT_ACTIVITIES),
    data: [
      KYT_CREATE,
      KYT_IMPORT,
      KYT_FETCH,
      KYT_CHECK_SCORE,
      KYT_CHANGE_RISK_SCORE,
      KYT_EDIT_RISK_SCORE_NOTE,
      KYT_ON_GOING_MONITORING_CHANGE,
      KYT_RE_SCREENED_NEW_TRANSACTION,
      KYT_RE_SCREENED_SCORE_CHANGE,
      KYT_ASSIGN,
      KYT_APPROVE,
      KYT_REJECT,
      KYT_ESCALATE,
    ],
  },
  {
    key: CASE_ACTIVITIES,
    labelGroup: getFilterGroupsActionText(CASE_ACTIVITIES),
    data: [CREATE_CASE, REASSIGN],
  },
  {
    key: STAFF_ACTIVITIES,
    labelGroup: getFilterGroupsActionText(STAFF_ACTIVITIES),
    data: [CREATE_USER, DELETE_USER],
  },
  {
    key: WHITELIST,
    labelGroup: getFilterGroupsActionText(WHITELIST),
    data: [
      SETTING_WHITELIST_IP_TURNED_ON,
      SETTING_WHITELIST_IP_MODIFIED,
      SETTING_WHITELIST_COUNTRY_TURNED_ON,
      SETTING_WHITELIST_COUNTRY_MODIFIED,
      SETTING_WHITELIST_TURNED_OFF,
    ],
  },
  {
    key: LIVENESS_ACTIVITIES,
    labelGroup: getFilterGroupsActionText(LIVENESS_ACTIVITIES),
    data: [LIVENESS_APPROVE, LIVENESS_REJECT, LIVENESS_CONFIDENCE_SETTING],
  },
];
export const filterActionList = reduceRight(
  map(filterGroupActionList, "data"),
  function (flattened, other) {
    return [...other, ...flattened];
  },
  []
);
export const getGroupByAction = (value) => {
  const data = find(filterGroupActionList, function (o) {
    return indexOf(o?.data, value) > -1;
  });
  return data?.key;
};
